{"ast":null,"code":"var _jsxFileName = \"C:\\\\PAB\\\\React\\\\6_Redux_Resume_builder\\\\resume-builder\\\\src\\\\Compnonets\\\\Balls.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Balls(props) {\n  console.log(props); // 6\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Number of Balls : \", props.balls]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.buyballs,\n      children: \"Buy Balls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.sellballs,\n      children: \"Sell Balls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n} // 5 -> provide state variables from store\n\n\n_c = Balls;\n\nconst mapStateToProps = store => {\n  // it will always give updated state from store \n  return store;\n}; // dispatch -> action provider to reducer\n\n\nconst maptoDispatchProps = dispacth => {\n  // action handler functions on various clicks\n  return {\n    buyballs: () => {\n      // dispatch fn\n      // help actions to connect to store\n      return dispacth({\n        type: \"buy_balls\"\n      });\n    },\n    sellballs: () => {\n      return dispacth({\n        type: \"sell_balls\"\n      });\n    }\n  };\n}; // higher order function\n\n\nexport default connect(mapStateToProps, maptoDispatchProps)(Balls);\n\nvar _c;\n\n$RefreshReg$(_c, \"Balls\");","map":{"version":3,"sources":["C:/PAB/React/6_Redux_Resume_builder/resume-builder/src/Compnonets/Balls.js"],"names":["React","connect","Balls","props","console","log","balls","buyballs","sellballs","mapStateToProps","store","maptoDispatchProps","dispacth","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADkB,CAElB;;AACA,sBACI;AAAA,4BACI;AAAA,uCAAuBA,KAAK,CAACG,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEH,KAAK,CAACI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEJ,KAAK,CAACK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CAED;;;KAZSN,K;;AAaT,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B;AACA,SAAOA,KAAP;AACH,CAHD,C,CAKA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC;AACA,SAAM;AACFL,IAAAA,QAAQ,EAAG,MAAM;AACb;AACI;AACJ,aAAOK,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAf;AACH,KALC;AAMFL,IAAAA,SAAS,EAAG,MAAM;AACd,aAAOI,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAf;AACH;AARC,GAAN;AAUH,CAZD,C,CAaA;;;AACA,eAAeZ,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,KAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Balls(props) {\r\n    console.log(props);\r\n    // 6\r\n    return (\r\n        <div>\r\n            <h1>Number of Balls : {props.balls}</h1>\r\n            <button onClick={props.buyballs}>Buy Balls</button>  \r\n            <button onClick={props.sellballs}>Sell Balls</button>  \r\n        </div>\r\n    )\r\n}\r\n\r\n// 5 -> provide state variables from store\r\nconst mapStateToProps = store => {\r\n    // it will always give updated state from store \r\n    return store;\r\n}\r\n\r\n// dispatch -> action provider to reducer\r\nconst maptoDispatchProps = dispacth => {\r\n    // action handler functions on various clicks\r\n    return{\r\n        buyballs : () => {\r\n            // dispatch fn\r\n                // help actions to connect to store\r\n            return dispacth({type: \"buy_balls\"});\r\n        },\r\n        sellballs : () => {\r\n            return dispacth({type:\"sell_balls\"})\r\n        }\r\n    }\r\n}\r\n// higher order function\r\nexport default connect(mapStateToProps, maptoDispatchProps)(Balls);\r\n"]},"metadata":{},"sourceType":"module"}