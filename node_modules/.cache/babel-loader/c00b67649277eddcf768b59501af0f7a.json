{"ast":null,"code":"import { products } from \"../data/data\";\nimport { createStore } from \"redux\";\nlet initialState = {\n  products,\n  cart: [],\n  cartCount: 0,\n  currItem: null\n};\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ViewItem\":\n      return {\n        products: state.products,\n        cart: state.cart,\n        currItem: action.payload\n      };\n\n    case \"AddToCart\":\n      let newState;\n      let itemId = action.payload.id;\n      let count = 1;\n      let flag = 0;\n\n      if (state.cart.length > 0) {\n        for (let i = 0; i < state.cart.length; i++) {\n          if (state.cart[i].id == itemId) {\n            state.cart[i].count += 1;\n            newState = {\n              products: state.products,\n              cart: state.cart,\n              cartCount: state.cartCount + 1,\n              currItem: state.currItem\n            };\n            flag = 1;\n            break;\n          }\n        }\n      }\n\n      if (flag === 0 | state.cart.length === 0) {\n        newState = {\n          products: state.products,\n          cart: [...state.cart, { ...action.payload,\n            count\n          }],\n          cartCount: state.cartCount + 1,\n          currItem: state.currItem\n        };\n      }\n\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(cartReducer);\nexport default store;","map":{"version":3,"sources":["C:/PAB/React/6_Redux_Resume_builder/resume-builder/src/carPOC/app/store.js"],"names":["products","createStore","initialState","cart","cartCount","currItem","cartReducer","state","action","type","payload","newState","itemId","id","count","flag","length","i","store"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,IAAIC,YAAY,GAAG;AACfF,EAAAA,QADe;AAEfG,EAAAA,IAAI,EAAE,EAFS;AAGfC,EAAAA,SAAS,EAAE,CAHI;AAIfC,EAAAA,QAAQ,EAAG;AAJI,CAAnB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAACL,YAA3B,EAAyCM,MAAzC,EAAgD;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACG,aAAS;AACRT,QAAAA,QAAQ,EAAEO,KAAK,CAACP,QADR;AAERG,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAFJ;AAGRE,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAHT,OAAT;;AAMH,SAAK,WAAL;AACI,UAAIC,QAAJ;AAEA,UAAIC,MAAM,GAAGJ,MAAM,CAACE,OAAP,CAAeG,EAA5B;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,IAAI,GAAG,CAAX;;AAEA,UAAGR,KAAK,CAACJ,IAAN,CAAWa,MAAX,GAAoB,CAAvB,EAAyB;AACrB,aAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAEV,KAAK,CAACJ,IAAN,CAAWa,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;AACnC,cAAGV,KAAK,CAACJ,IAAN,CAAWc,CAAX,EAAcJ,EAAd,IAAoBD,MAAvB,EAA8B;AAC1BL,YAAAA,KAAK,CAACJ,IAAN,CAAWc,CAAX,EAAcH,KAAd,IAAuB,CAAvB;AACAH,YAAAA,QAAQ,GAAG;AACPX,cAAAA,QAAQ,EAAEO,KAAK,CAACP,QADT;AAEPG,cAAAA,IAAI,EAAEI,KAAK,CAACJ,IAFL;AAGPC,cAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,GAAkB,CAHtB;AAIPC,cAAAA,QAAQ,EAAEE,KAAK,CAACF;AAJT,aAAX;AAMAU,YAAAA,IAAI,GAAG,CAAP;AACA;AACH;AACJ;AACJ;;AACD,UAAGA,IAAI,KAAK,CAAT,GAAaR,KAAK,CAACJ,IAAN,CAAWa,MAAX,KAAoB,CAApC,EAAsC;AAClCL,QAAAA,QAAQ,GAAG;AACRX,UAAAA,QAAQ,EAAEO,KAAK,CAACP,QADR;AAERG,UAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgB,EAAC,GAAGK,MAAM,CAACE,OAAX;AAAoBI,YAAAA;AAApB,WAAhB,CAFE;AAGRV,UAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,GAAkB,CAHrB;AAIRC,UAAAA,QAAQ,EAAEE,KAAK,CAACF;AAJR,SAAX;AAMH;;AACF,aAAOM,QAAP;;AAEH;AACI,aAAOJ,KAAP;AAzCR;AA2CH;;AAED,MAAMW,KAAK,GAAGjB,WAAW,CAACK,WAAD,CAAzB;AAEA,eAAeY,KAAf","sourcesContent":["import { products } from \"../data/data\";\r\nimport {createStore} from \"redux\";\r\nlet initialState = {\r\n    products,\r\n    cart: [],\r\n    cartCount: 0,\r\n    currItem : null\r\n}\r\nfunction cartReducer(state=initialState, action){\r\n    switch (action.type) {\r\n        case \"ViewItem\": \r\n           return   {\r\n            products: state.products,\r\n            cart: state.cart,\r\n            currItem: action.payload\r\n        };\r\n        \r\n        case \"AddToCart\": \r\n            let newState;\r\n        \r\n            let itemId = action.payload.id;\r\n            let count = 1;\r\n            let flag = 0;\r\n            \r\n            if(state.cart.length > 0){\r\n                for(let i= 0;i <state.cart.length; i++){\r\n                    if(state.cart[i].id == itemId){\r\n                        state.cart[i].count += 1;\r\n                        newState = {\r\n                            products: state.products,\r\n                            cart: state.cart,\r\n                            cartCount: state.cartCount + 1,\r\n                            currItem: state.currItem\r\n                        }\r\n                        flag = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(flag === 0 | state.cart.length===0){\r\n                newState = {\r\n                   products: state.products,\r\n                   cart: [...state.cart, {...action.payload, count}],\r\n                   cartCount: state.cartCount + 1,\r\n                   currItem: state.currItem\r\n               }\r\n            }\r\n           return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(cartReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}