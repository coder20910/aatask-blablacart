{"ast":null,"code":"import { products } from \"../data/data\";\nimport { createStore } from \"redux\";\nlet initialState = {\n  products,\n  cart: [],\n  currItem: null\n};\n\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ViewItem\":\n      return {\n        products: state.products,\n        cart: state.cart,\n        cartCount: state.cartCount,\n        currItem: action.payload\n      };\n\n    case \"AddToCart\":\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          count: item.count + 1\n        } : item) : [...state.cart, { ...action.payload,\n          count: 1\n        }]\n      };\n\n    case \"DeleteItem\":\n      return { ...state,\n        cart: state.cart.filter(item => item.id)\n      };\n\n    case \"AdjustQty\":\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          count: +action.payload.count\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(cartReducer);\nexport default store;","map":{"version":3,"sources":["C:/PAB/React/6_Redux_Resume_builder/resume-builder/src/carPOC/app/store.js"],"names":["products","createStore","initialState","cart","currItem","cartReducer","state","action","type","cartCount","payload","inCart","find","item","id","map","count","filter","store"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,IAAIC,YAAY,GAAG;AACfF,EAAAA,QADe;AAEfG,EAAAA,IAAI,EAAE,EAFS;AAGfC,EAAAA,QAAQ,EAAG;AAHI,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAACJ,YAA3B,EAAyCK,MAAzC,EAAgD;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACG,aAAS;AACRR,QAAAA,QAAQ,EAAEM,KAAK,CAACN,QADR;AAERG,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAFJ;AAGRM,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAHT;AAIRL,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAJT,OAAT;;AAOH,SAAK,WAAL;AACI,YAAMC,MAAM,GAAGL,KAAK,CAACH,IAAN,CAAWS,IAAX,CAAiBC,IAAD,IAC3BA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,GACE,IADF,GAEE,KAHS,CAAf;AAKD,aAAO,EACH,GAAGR,KADA;AAEHH,QAAAA,IAAI,EAAEQ,MAAM,GACVL,KAAK,CAACH,IAAN,CAAWY,GAAX,CAAgBF,IAAD,IACbA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,GACE,EAAC,GAAGD,IAAJ;AAAUG,UAAAA,KAAK,EAAGH,IAAI,CAACG,KAAL,GAAa;AAA/B,SADF,GAEEH,IAHJ,CADU,GAKV,CAAC,GAAGP,KAAK,CAACH,IAAV,EAAgB,EAAC,GAAGI,MAAM,CAACG,OAAX;AAAoBM,UAAAA,KAAK,EAAE;AAA3B,SAAhB;AAPC,OAAP;;AASH,SAAK,YAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWc,MAAX,CAAmBJ,IAAD,IACxBA,IAAI,CAACC,EADC;AAFH,OAAP;;AAKJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWY,GAAX,CAAgBF,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,GACE,EAAC,GAAGD,IAAJ;AAAUG,UAAAA,KAAK,EAAE,CAACT,MAAM,CAACG,OAAP,CAAeM;AAAjC,SADF,GAEEH,IAHI;AAFH,OAAP;;AAOJ;AACI,aAAOP,KAAP;AAvCR;AAyCH;;AAED,MAAMY,KAAK,GAAGjB,WAAW,CAACI,WAAD,CAAzB;AAEA,eAAea,KAAf","sourcesContent":["import { products } from \"../data/data\";\r\nimport {createStore} from \"redux\";\r\nlet initialState = {\r\n    products,\r\n    cart: [],\r\n    currItem : null\r\n}\r\nfunction cartReducer(state=initialState, action){\r\n    switch (action.type) {\r\n        case \"ViewItem\": \r\n           return   {\r\n            products: state.products,\r\n            cart: state.cart,\r\n            cartCount: state.cartCount,\r\n            currItem: action.payload\r\n        };\r\n        \r\n        case \"AddToCart\": \r\n            const inCart = state.cart.find((item) =>\r\n                item.id === action.payload.id \r\n                ? true\r\n                : false)\r\n\r\n           return {\r\n               ...state,\r\n               cart: inCart\r\n               ? state.cart.map((item) => \r\n                   item.id === action.payload.id \r\n                   ? {...item, count : item.count + 1} \r\n                   : item)\r\n               : [...state.cart, {...action.payload, count: 1}]\r\n           };\r\n        case \"DeleteItem\":\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter((item)=>\r\n                item.id)\r\n            }\r\n        case \"AdjustQty\":\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map((item)=> \r\n                item.id === action.payload.id \r\n                ? {...item, count: +action.payload.count}\r\n                : item)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(cartReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}